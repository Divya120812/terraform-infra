name: Deploy DEV - EC2 
on: { workflow_dispatch: {} }

permissions: { id-token: write, contents: read }

jobs:
  ec2:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra-terraform/env/dev/dev_ec2  # <-- same env folder
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.ACCOUNT_ID }}:role/${{ vars.OIDC_ROLE }}  # add account Id and OIDC role in secrets and variables in settings   
          aws-region: us-east-1                                                           #arn added in secrets in settings

      - uses: hashicorp/setup-terraform@v3
        with: { terraform_version: ">=1.6.0" }

      - name: Terraform init
        run: terraform init -backend-config=backend.hcl

      # This targets only the EC2 module. If the VPC is already applied,
      # it will just create/update EC2. If VPC isn't there yet, Terraform may
      # include required dependencies automatically.
      - name: Terraform plan (EC2)
        run: terraform plan -target=module.ec2 -out ec2.tfplan -var-file="terraform.tfvars"

      - name: Terraform apply (EC2)
        if: ${{ github.ref == 'refs/heads/main' }}
        run: terraform apply -auto-approve ec2.tfplan

      - name: Outputs (EC2)
        run: terraform output -json | tee ec2_outputs.json

      - uses: actions/upload-artifact@v4
        with:
          name: ec2-outputs
          path: ec2_outputs.json
